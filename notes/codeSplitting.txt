Code Splitting

Code splitting is a way for us to optimize our React code. React+ReactDom is about 40kB. That can tank
performance. Therefore, we need to do something called code splitting. It's a strategy to split things
up. React & Vite work well together to do that.

Think about a SIZE budget for performance for React code.

First thing we did was in App.jsx. Importing at the top takes your whole code and puts it into that compiled
file, whether or not that module gets loaded in or used. By using lazy (from React), we can "panik" import
these React components ONLY when the user navigates to them.

Suspense is going to be inside of QueryClientProvider, but outside of the custom AdoptedPetContext.Provider.
This gives us a fallback in the case that we aren't able to load our modules in time. It essentially acts
like a buffer page so the user doesn't have to see the final page until it's LOADED in.

Code splitting is just that simple.

Notes: Code splitting is only really useful in LARGER chunks (ie. 10kB, 20kB etc.)